name: linters
permissions: {}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  rubocop:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - name: Install dependencies
        run: bundle install
      - name: Run rubocop
        run: |
          bundle exec rubocop -v
          bundle exec rubocop

  clang_format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 2
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget gnupg2 git
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo bash -c "echo 'deb https://apt.llvm.org/focal/ llvm-toolchain-focal-18 main' >> /etc/apt/sources.list"
          sudo apt-get update -y
          sudo apt-get install -y clang-format-18
      - name: Run clang-format
        env:
          CB_GIT_CLANG_FORMAT: /usr/bin/git-clang-format-18
          CB_CLANG_FORMAT: /usr/bin/clang-format-18
        run: ./bin/check-clang-format

  clang_static_analyzer:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev cmake curl wget gnupg2
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo bash -c "echo 'deb https://apt.llvm.org/focal/ llvm-toolchain-focal-18 main' >> /etc/apt/sources.list"
          sudo apt-get update -y
          sudo apt-get install -y clang-18 clang-tools-18
      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ github.job }}
      - name: Run scan build
        run: ./bin/check-clang-static-analyzer
        env:
          CB_CC: /usr/bin/clang-18
          CB_CXX: /usr/bin/clang++-18
          CB_SCAN_BUILD: /usr/bin/scan-build-18
      - name: Upload scan-build report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: ext/cmake-build-report.tar.gz
