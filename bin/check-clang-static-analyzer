#!/usr/bin/env bash

#  Copyright 2020-2021 Couchbase, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

PROJECT_ROOT="$( cd "$(dirname "$0")/.." >/dev/null 2>&1 ; pwd -P )"

DEFAULT_SCAN_BUILD=$(which scan-build)
DEFAULT_CC=$(which clang)
DEFAULT_CXX=$(which clang++)

if command -v brew &> /dev/null
then
    LLVM_PREFIX=$(brew --prefix llvm)
    DEFAULT_SCAN_BUILD=${LLVM_PREFIX}/bin/scan-build
    DEFAULT_CC=${LLVM_PREFIX}/bin/clang
    DEFAULT_CXX=${LLVM_PREFIX}/bin/clang++
fi

CB_CMAKE=${CB_CMAKE:-$(which cmake)}
CB_CC=${CB_CC:-${DEFAULT_CC}}
CB_CXX=${CB_CXX:-${DEFAULT_CXX}}
CB_SCAN_BUILD=${CB_SCAN_BUILD:-${DEFAULT_SCAN_BUILD}}

echo "CB_CC=${CB_CC}"
echo "CB_CXX=${CB_CXX}"
echo "CB_SCAN_BUILD=${CB_SCAN_BUILD}"
echo "CB_CMAKE=${CB_CMAKE}"

set -exuo pipefail

BUILD_DIR="${PROJECT_ROOT}/ext/cmake-build-clang-analyzer"
REPORT_DIR="${PROJECT_ROOT}/ext/cmake-build-report"

rm -rf "${BUILD_DIR}" "${REPORT_DIR}"
mkdir -p "${BUILD_DIR}"
cd "${BUILD_DIR}"

SCAN_BUILD_ARGS="--exclude third_party --exclude _deps -o ${REPORT_DIR} --use-analyzer=${CB_CC} --use-c++=${CB_CXX} --use-cc=${CB_CC} --status-bugs"

RUBY_HDR_DIR=$(ruby -rrbconfig -e "puts RbConfig::CONFIG['rubyhdrdir']")
RUBY_ARCH_HDR_DIR=$(ruby -rrbconfig -e "puts RbConfig::CONFIG['rubyarchhdrdir']")

${CB_SCAN_BUILD} ${SCAN_BUILD_ARGS} ${CB_CMAKE} \
    -DENABLE_CACHE=OFF \
    -DRUBY_HDR_DIR="${RUBY_HDR_DIR}" \
    -DRUBY_ARCH_HDR_DIR="${RUBY_ARCH_HDR_DIR}" \
    -DCOUCHBASE_CXX_CLIENT_INSTALL=OFF \
    -DCOUCHBASE_CXX_CLIENT_BUILD_SHARED=OFF \
    -DCOUCHBASE_CXX_CLIENT_BUILD_STATIC=ON \
    -DCOUCHBASE_CXX_CLIENT_BUILD_TESTS=OFF \
    -DCOUCHBASE_CXX_CLIENT_BUILD_DOCS=OFF \
    -DCOUCHBASE_CXX_CLIENT_BUILD_EXAMPLES=OFF \
    ..

set +e
${CB_SCAN_BUILD} ${SCAN_BUILD_ARGS} ${CB_CMAKE} --build . --parallel 8 --verbose
STATUS=$?
set -e

tar zcvf ${REPORT_DIR}.tar.gz -C ${REPORT_DIR} .
exit ${STATUS}
