# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: couchbase/admin/bucket/v1/bucket.proto

require 'google/protobuf'

require 'couchbase/protostellar/generated/kv/v1/kv_pb'


descriptor_data = "\n&couchbase/admin/bucket/v1/bucket.proto\x12\x19\x63ouchbase.admin.bucket.v1\x1a\x18\x63ouchbase/kv/v1/kv.proto\"\x14\n\x12ListBucketsRequest\"\xcc\x05\n\x13ListBucketsResponse\x12\x46\n\x07\x62uckets\x18\x01 \x03(\x0b\x32\x35.couchbase.admin.bucket.v1.ListBucketsResponse.Bucket\x1a\xec\x04\n\x06\x42ucket\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x15\n\rflush_enabled\x18\x02 \x01(\x08\x12\x14\n\x0cram_quota_mb\x18\x03 \x01(\x04\x12\x14\n\x0cnum_replicas\x18\x04 \x01(\r\x12\x17\n\x0freplica_indexes\x18\x05 \x01(\x08\x12:\n\x0b\x62ucket_type\x18\x06 \x01(\x0e\x32%.couchbase.admin.bucket.v1.BucketType\x12>\n\reviction_mode\x18\x07 \x01(\x0e\x32\'.couchbase.admin.bucket.v1.EvictionMode\x12\x17\n\x0fmax_expiry_secs\x18\x08 \x01(\r\x12\x44\n\x10\x63ompression_mode\x18\t \x01(\x0e\x32*.couchbase.admin.bucket.v1.CompressionMode\x12G\n\x18minimum_durability_level\x18\n \x01(\x0e\x32 .couchbase.kv.v1.DurabilityLevelH\x00\x88\x01\x01\x12G\n\x0fstorage_backend\x18\x0b \x01(\x0e\x32).couchbase.admin.bucket.v1.StorageBackendH\x01\x88\x01\x01\x12S\n\x18\x63onflict_resolution_type\x18\x0c \x01(\x0e\x32\x31.couchbase.admin.bucket.v1.ConflictResolutionTypeB\x1b\n\x19_minimum_durability_levelB\x12\n\x10_storage_backend\"\xc1\x06\n\x13\x43reateBucketRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12:\n\x0b\x62ucket_type\x18\x02 \x01(\x0e\x32%.couchbase.admin.bucket.v1.BucketType\x12\x19\n\x0cram_quota_mb\x18\x03 \x01(\x04H\x00\x88\x01\x01\x12\x19\n\x0cnum_replicas\x18\x04 \x01(\rH\x01\x88\x01\x01\x12\x1a\n\rflush_enabled\x18\x05 \x01(\x08H\x02\x88\x01\x01\x12\x1c\n\x0freplica_indexes\x18\x06 \x01(\x08H\x03\x88\x01\x01\x12\x43\n\reviction_mode\x18\x07 \x01(\x0e\x32\'.couchbase.admin.bucket.v1.EvictionModeH\x04\x88\x01\x01\x12\x1c\n\x0fmax_expiry_secs\x18\x08 \x01(\rH\x05\x88\x01\x01\x12I\n\x10\x63ompression_mode\x18\t \x01(\x0e\x32*.couchbase.admin.bucket.v1.CompressionModeH\x06\x88\x01\x01\x12G\n\x18minimum_durability_level\x18\n \x01(\x0e\x32 .couchbase.kv.v1.DurabilityLevelH\x07\x88\x01\x01\x12G\n\x0fstorage_backend\x18\x0b \x01(\x0e\x32).couchbase.admin.bucket.v1.StorageBackendH\x08\x88\x01\x01\x12X\n\x18\x63onflict_resolution_type\x18\x0c \x01(\x0e\x32\x31.couchbase.admin.bucket.v1.ConflictResolutionTypeH\t\x88\x01\x01\x42\x0f\n\r_ram_quota_mbB\x0f\n\r_num_replicasB\x10\n\x0e_flush_enabledB\x12\n\x10_replica_indexesB\x10\n\x0e_eviction_modeB\x12\n\x10_max_expiry_secsB\x13\n\x11_compression_modeB\x1b\n\x19_minimum_durability_levelB\x12\n\x10_storage_backendB\x1b\n\x19_conflict_resolution_type\"+\n\x14\x43reateBucketResponse\x12\x13\n\x0b\x62ucket_uuid\x18\x01 \x01(\t\"\xff\x03\n\x13UpdateBucketRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x19\n\x0cram_quota_mb\x18\x02 \x01(\x04H\x00\x88\x01\x01\x12\x19\n\x0cnum_replicas\x18\x03 \x01(\rH\x01\x88\x01\x01\x12\x1a\n\rflush_enabled\x18\x04 \x01(\x08H\x02\x88\x01\x01\x12\x43\n\reviction_mode\x18\x05 \x01(\x0e\x32\'.couchbase.admin.bucket.v1.EvictionModeH\x03\x88\x01\x01\x12\x1c\n\x0fmax_expiry_secs\x18\x06 \x01(\rH\x04\x88\x01\x01\x12I\n\x10\x63ompression_mode\x18\x07 \x01(\x0e\x32*.couchbase.admin.bucket.v1.CompressionModeH\x05\x88\x01\x01\x12G\n\x18minimum_durability_level\x18\x08 \x01(\x0e\x32 .couchbase.kv.v1.DurabilityLevelH\x06\x88\x01\x01\x42\x0f\n\r_ram_quota_mbB\x0f\n\r_num_replicasB\x10\n\x0e_flush_enabledB\x10\n\x0e_eviction_modeB\x12\n\x10_max_expiry_secsB\x13\n\x11_compression_modeB\x1b\n\x19_minimum_durability_level\"\x16\n\x14UpdateBucketResponse\"*\n\x13\x44\x65leteBucketRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\"\x16\n\x14\x44\x65leteBucketResponse*B\n\nBucketType\x12\x19\n\x15\x42UCKET_TYPE_COUCHBASE\x10\x00\x12\x19\n\x15\x42UCKET_TYPE_EPHEMERAL\x10\x01*\x81\x01\n\x0c\x45victionMode\x12\x16\n\x12\x45VICTION_MODE_FULL\x10\x00\x12#\n\x1f\x45VICTION_MODE_NOT_RECENTLY_USED\x10\x01\x12\x1c\n\x18\x45VICTION_MODE_VALUE_ONLY\x10\x02\x12\x16\n\x12\x45VICTION_MODE_NONE\x10\x03*f\n\x0f\x43ompressionMode\x12\x18\n\x14\x43OMPRESSION_MODE_OFF\x10\x00\x12\x1c\n\x18\x43OMPRESSION_MODE_PASSIVE\x10\x01\x12\x1b\n\x17\x43OMPRESSION_MODE_ACTIVE\x10\x02*K\n\x0eStorageBackend\x12\x1e\n\x1aSTORAGE_BACKEND_COUCHSTORE\x10\x00\x12\x19\n\x15STORAGE_BACKEND_MAGMA\x10\x01*\x93\x01\n\x16\x43onflictResolutionType\x12&\n\"CONFLICT_RESOLUTION_TYPE_TIMESTAMP\x10\x00\x12,\n(CONFLICT_RESOLUTION_TYPE_SEQUENCE_NUMBER\x10\x01\x12#\n\x1f\x43ONFLICT_RESOLUTION_TYPE_CUSTOM\x10\x02\x32\xdd\x03\n\x12\x42ucketAdminService\x12n\n\x0bListBuckets\x12-.couchbase.admin.bucket.v1.ListBucketsRequest\x1a..couchbase.admin.bucket.v1.ListBucketsResponse\"\x00\x12q\n\x0c\x43reateBucket\x12..couchbase.admin.bucket.v1.CreateBucketRequest\x1a/.couchbase.admin.bucket.v1.CreateBucketResponse\"\x00\x12q\n\x0cUpdateBucket\x12..couchbase.admin.bucket.v1.UpdateBucketRequest\x1a/.couchbase.admin.bucket.v1.UpdateBucketResponse\"\x00\x12q\n\x0c\x44\x65leteBucket\x12..couchbase.admin.bucket.v1.DeleteBucketRequest\x1a/.couchbase.admin.bucket.v1.DeleteBucketResponse\"\x00\x42\x97\x02\n1com.couchbase.client.protostellar.admin.bucket.v1P\x01ZLgithub.com/couchbase/goprotostellar/genproto/admin_bucket_v1;admin_bucket_v1\xaa\x02&Couchbase.Protostellar.Admin.Bucket.V1\xca\x02\x30\x43ouchbase\\Protostellar\\Generated\\Admin\\Bucket\\V1\xea\x02\x35\x43ouchbase::Protostellar::Generated::Admin::Bucket::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Couchbase
  module Protostellar
    module Generated
      module Admin
        module Bucket
          module V1
            ListBucketsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.ListBucketsRequest").msgclass
            ListBucketsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.ListBucketsResponse").msgclass
            ListBucketsResponse::Bucket = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.ListBucketsResponse.Bucket").msgclass
            CreateBucketRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.CreateBucketRequest").msgclass
            CreateBucketResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.CreateBucketResponse").msgclass
            UpdateBucketRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.UpdateBucketRequest").msgclass
            UpdateBucketResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.UpdateBucketResponse").msgclass
            DeleteBucketRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.DeleteBucketRequest").msgclass
            DeleteBucketResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.DeleteBucketResponse").msgclass
            BucketType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.BucketType").enummodule
            EvictionMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.EvictionMode").enummodule
            CompressionMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.CompressionMode").enummodule
            StorageBackend = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.StorageBackend").enummodule
            ConflictResolutionType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.bucket.v1.ConflictResolutionType").enummodule
          end
        end
      end
    end
  end
end
