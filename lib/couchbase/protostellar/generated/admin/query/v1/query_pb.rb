# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: couchbase/admin/query/v1/query.proto

require 'google/protobuf'


descriptor_data = "\n$couchbase/admin/query/v1/query.proto\x12\x18\x63ouchbase.admin.query.v1\"\x9a\x01\n\x14GetAllIndexesRequest\x12\x18\n\x0b\x62ucket_name\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x02\x88\x01\x01\x42\x0e\n\x0c_bucket_nameB\r\n\x0b_scope_nameB\x12\n\x10_collection_name\"\x91\x03\n\x15GetAllIndexesResponse\x12\x46\n\x07indexes\x18\x01 \x03(\x0b\x32\x35.couchbase.admin.query.v1.GetAllIndexesResponse.Index\x1a\xaf\x02\n\x05Index\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x12\n\nscope_name\x18\x02 \x01(\t\x12\x17\n\x0f\x63ollection_name\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x12\n\nis_primary\x18\x05 \x01(\x08\x12\x31\n\x04type\x18\x06 \x01(\x0e\x32#.couchbase.admin.query.v1.IndexType\x12\x33\n\x05state\x18\x07 \x01(\x0e\x32$.couchbase.admin.query.v1.IndexState\x12\x0e\n\x06\x66ields\x18\x08 \x03(\t\x12\x16\n\tcondition\x18\t \x01(\tH\x00\x88\x01\x01\x12\x16\n\tpartition\x18\n \x01(\tH\x01\x88\x01\x01\x42\x0c\n\n_conditionB\x0c\n\n_partition\"\xaa\x02\n\x19\x43reatePrimaryIndexRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x11\n\x04name\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x19\n\x0cnum_replicas\x18\x05 \x01(\x05H\x03\x88\x01\x01\x12\x15\n\x08\x64\x65\x66\x65rred\x18\x06 \x01(\x08H\x04\x88\x01\x01\x12\x1d\n\x10ignore_if_exists\x18\x07 \x01(\x08H\x05\x88\x01\x01\x42\r\n\x0b_scope_nameB\x12\n\x10_collection_nameB\x07\n\x05_nameB\x0f\n\r_num_replicasB\x0b\n\t_deferredB\x13\n\x11_ignore_if_exists\"\x1c\n\x1a\x43reatePrimaryIndexResponse\"\xa5\x02\n\x12\x43reateIndexRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x19\n\x0cnum_replicas\x18\x05 \x01(\x05H\x02\x88\x01\x01\x12\x0e\n\x06\x66ields\x18\x06 \x03(\t\x12\x15\n\x08\x64\x65\x66\x65rred\x18\x07 \x01(\x08H\x03\x88\x01\x01\x12\x1d\n\x10ignore_if_exists\x18\x08 \x01(\x08H\x04\x88\x01\x01\x42\r\n\x0b_scope_nameB\x12\n\x10_collection_nameB\x0f\n\r_num_replicasB\x0b\n\t_deferredB\x13\n\x11_ignore_if_exists\"\x15\n\x13\x43reateIndexResponse\"\xda\x01\n\x17\x44ropPrimaryIndexRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x11\n\x04name\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x1e\n\x11ignore_if_missing\x18\x05 \x01(\x08H\x03\x88\x01\x01\x42\r\n\x0b_scope_nameB\x12\n\x10_collection_nameB\x07\n\x05_nameB\x14\n\x12_ignore_if_missing\"\x1a\n\x18\x44ropPrimaryIndexResponse\"\xc5\x01\n\x10\x44ropIndexRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x1e\n\x11ignore_if_missing\x18\x05 \x01(\x08H\x02\x88\x01\x01\x42\r\n\x0b_scope_nameB\x12\n\x10_collection_nameB\x14\n\x12_ignore_if_missing\"\x13\n\x11\x44ropIndexResponse\"\x8c\x01\n\x1b\x42uildDeferredIndexesRequest\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x42\r\n\x0b_scope_nameB\x12\n\x10_collection_name\"\xf4\x01\n\x1c\x42uildDeferredIndexesResponse\x12M\n\x07indexes\x18\x01 \x03(\x0b\x32<.couchbase.admin.query.v1.BuildDeferredIndexesResponse.Index\x1a\x84\x01\n\x05Index\x12\x13\n\x0b\x62ucket_name\x18\x01 \x01(\t\x12\x17\n\nscope_name\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x1c\n\x0f\x63ollection_name\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x0c\n\x04name\x18\x04 \x01(\tB\r\n\x0b_scope_nameB\x12\n\x10_collection_name*4\n\tIndexType\x12\x13\n\x0fINDEX_TYPE_VIEW\x10\x00\x12\x12\n\x0eINDEX_TYPE_GSI\x10\x01*\xbf\x01\n\nIndexState\x12\x18\n\x14INDEX_STATE_DEFERRED\x10\x00\x12\x18\n\x14INDEX_STATE_BUILDING\x10\x01\x12\x17\n\x13INDEX_STATE_PENDING\x10\x02\x12\x16\n\x12INDEX_STATE_ONLINE\x10\x03\x12\x17\n\x13INDEX_STATE_OFFLINE\x10\x04\x12\x18\n\x14INDEX_STATE_ABRIDGED\x10\x05\x12\x19\n\x15INDEX_STATE_SCHEDULED\x10\x06\x32\xe8\x05\n\x11QueryAdminService\x12r\n\rGetAllIndexes\x12..couchbase.admin.query.v1.GetAllIndexesRequest\x1a/.couchbase.admin.query.v1.GetAllIndexesResponse\"\x00\x12\x81\x01\n\x12\x43reatePrimaryIndex\x12\x33.couchbase.admin.query.v1.CreatePrimaryIndexRequest\x1a\x34.couchbase.admin.query.v1.CreatePrimaryIndexResponse\"\x00\x12l\n\x0b\x43reateIndex\x12,.couchbase.admin.query.v1.CreateIndexRequest\x1a-.couchbase.admin.query.v1.CreateIndexResponse\"\x00\x12{\n\x10\x44ropPrimaryIndex\x12\x31.couchbase.admin.query.v1.DropPrimaryIndexRequest\x1a\x32.couchbase.admin.query.v1.DropPrimaryIndexResponse\"\x00\x12\x66\n\tDropIndex\x12*.couchbase.admin.query.v1.DropIndexRequest\x1a+.couchbase.admin.query.v1.DropIndexResponse\"\x00\x12\x87\x01\n\x14\x42uildDeferredIndexes\x12\x35.couchbase.admin.query.v1.BuildDeferredIndexesRequest\x1a\x36.couchbase.admin.query.v1.BuildDeferredIndexesResponse\"\x00\x42\x91\x02\n0com.couchbase.client.protostellar.admin.query.v1P\x01ZJgithub.com/couchbase/goprotostellar/genproto/admin_query_v1;admin_query_v1\xaa\x02%Couchbase.Protostellar.Admin.Query.V1\xca\x02/Couchbase\\Protostellar\\Generated\\Admin\\Query\\V1\xea\x02\x34\x43ouchbase::Protostellar::Generated::Admin::Query::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Couchbase
  module Protostellar
    module Generated
      module Admin
        module Query
          module V1
            GetAllIndexesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.GetAllIndexesRequest").msgclass
            GetAllIndexesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.GetAllIndexesResponse").msgclass
            GetAllIndexesResponse::Index = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.GetAllIndexesResponse.Index").msgclass
            CreatePrimaryIndexRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.CreatePrimaryIndexRequest").msgclass
            CreatePrimaryIndexResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.CreatePrimaryIndexResponse").msgclass
            CreateIndexRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.CreateIndexRequest").msgclass
            CreateIndexResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.CreateIndexResponse").msgclass
            DropPrimaryIndexRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.DropPrimaryIndexRequest").msgclass
            DropPrimaryIndexResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.DropPrimaryIndexResponse").msgclass
            DropIndexRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.DropIndexRequest").msgclass
            DropIndexResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.DropIndexResponse").msgclass
            BuildDeferredIndexesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.BuildDeferredIndexesRequest").msgclass
            BuildDeferredIndexesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.BuildDeferredIndexesResponse").msgclass
            BuildDeferredIndexesResponse::Index = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.BuildDeferredIndexesResponse.Index").msgclass
            IndexType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.IndexType").enummodule
            IndexState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("couchbase.admin.query.v1.IndexState").enummodule
          end
        end
      end
    end
  end
end
