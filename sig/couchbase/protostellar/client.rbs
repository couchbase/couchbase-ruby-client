#  Copyright 2022-Present Couchbase, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

module Couchbase
  module Protostellar
    class Client
      @channel: Object
      @routing_stub: Object
      @kv_stub: Object
      @query_stub: Object
      @search_stub: Object
      @analytics_stub: Object
      @view_stub: Object

      def initialize: (String host, untyped credentials, untyped channel_args) -> void
      def stub: (Symbol) -> untyped
      def send_request: (Request) -> untyped


      def kv: () -> untyped

      def close: () -> void

      def get: (String, Integer) -> untyped
      def get_and_touch: (untyped, Integer) -> untyped
      def get_and_lock: (untyped, Integer) -> untyped
      def unlock: (untyped, Integer) -> untyped
      def get_replica: (untyped, Integer) -> untyped
      def touch: (untyped, Integer) -> untyped
      def exists: (untyped, Integer) -> untyped
      def insert: (untyped, Integer) -> untyped
      def upsert: (untyped, Integer) -> untyped
      def replace: (untyped, Integer) -> untyped
      def remove: (untyped, Integer) -> untyped
      def increment: (untyped, Integer) -> untyped
      def decrement: (untyped, Integer) -> untyped
      def append: (untyped, Integer) -> untyped
      def prepend: (untyped, Integer) -> untyped
      def lookup_in: (untyped, Integer) -> untyped
      def mutate_in: (untyped, Integer) -> untyped
      def range_scan: (untyped, Integer) -> untyped

      def query: (untyped, Integer) -> untyped

      def get_deadline: (Integer?) -> Time?
    end
  end
end
