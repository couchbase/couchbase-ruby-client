#  Copyright 2022-Present. Couchbase, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

module Couchbase
  module Protostellar
    class QueryOptions
      DEFAULT: QueryOptions

      attr_accessor adhoc: bool
      attr_accessor client_context_id: String?
      attr_accessor max_parallelism: Integer?
      attr_accessor readonly: bool?
      attr_accessor scan_wait: Integer | _CanInMilliseconds | nil
      attr_accessor scan_cap: Integer?
      attr_accessor pipeline_batch: Integer?
      attr_accessor pipeline_cap: Integer?
      attr_accessor metrics: bool?
      attr_accessor profile: :off | :phases | :timings
      attr_accessor flex_index: bool?
      attr_accessor preserve_expiry: bool?
      attr_accessor scope_qualifier: String?
      attr_accessor transcoder: JsonTranscoder | _CanDecode
      attr_accessor timeout: Integer | _CanInMilliseconds | nil

      @scan_consistency: :not_bounded | :request_plus | nil
      attr_reader mutation_state: MutationState?
      @positional_parameters: Array[_CanToJson]?
      @named_parameters: Hash[String, _CanToJson]?
      attr_reader raw_parameters: untyped

      def initialize: (
          adhoc: bool,
          client_context_id: String?,
          max_parallelism: Integer?,
          readonly: bool,
          scan_wait: Integer | _CanInMilliseconds | nil,
          scan_cap: Integer?,
          pipeline_cap: Integer?,
          pipeline_batch: Integer?,
          metrics: bool?,
          profile: :off | :phases | :timings,
          flex_index: bool?,
          preserve_expiry: bool?,
          scope_qualifier: String?,
          scan_consistency: :not_bounded | :request_plus | nil,
          mutation_state: MutationState?,
          transcoder: JsonTranscoder | _CanDecode,
          positional_parameters: Array[_CanToJson]?,
          named_parameters: Hash[String, _CanToJson]?,
          timeout: Integer | _CanInMilliseconds | nil
        ) -> void

      def raw: (String, Object) -> void

      def scan_consistency=: (:not_bounded | :request_plus) -> void

      def consistent_with: (MutationState) -> void

      def positional_parameters: (Array[_CanToJson]) -> void

      def export_positional_parameters: () -> Array[String]?

      def named_parameters: (Hash[String, _CanToJson]) -> void

      def export_named_parameters: () -> Hash[String, String]?

      def to_request: (scope_name: String?, bucket_name: String?) -> Hash[Symbol, untyped]
    end
  end
end
